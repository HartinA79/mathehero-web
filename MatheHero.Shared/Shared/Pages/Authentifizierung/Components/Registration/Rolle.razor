@page "/registration/rolle"

@using MatheHero.Shared.Models
@using MatheHero.Shared.Resources.Shared.Pages.Authentifizierung
@using MatheHero.Shared.Shared.Pages.Authentifizierung

@inject IStringLocalizer<Registration> _localizer

<div class="form-group text-center">
	<label class="popup-text-label mb-2" style="font-weight:600;">@_localizer[RegistrationResourceKeys.WerBistDu]</label>
	<div class="gast-actions">
		<button type="button" class="btn-choose @GetButtonRolle("Schüler")" @onclick="@(() => SelectRolle("Schüler"))">
			<i class="fa fa-user-graduate me-2"></i>
			@_localizer[RegistrationResourceKeys.Schueler]
		</button>
		<button type="button" class="btn-choose @GetButtonRolle("Lehrer")" @onclick="@(() => SelectRolle("Lehrer"))">
            <i class="fa fa-chalkboard-teacher me-2"></i>
            @_localizer[RegistrationResourceKeys.Lehrer]
        </button>
	</div>
</div>

<div class="mt-3 text-center">
	<button class="btn-login btn-outline" @onclick="OnNext" disabled="@string.IsNullOrEmpty(selectedRolle)">@_localizer[RegistrationResourceKeys.Weiter]</button>
</div>


@code {
	[Parameter]
	public RegisterModel Model { get; set; }

	[Parameter]
	public EventCallback OnNext { get; set; }

	private string? selectedRolle;

	private async Task SelectRolle(string rolle)
	{
		selectedRolle = rolle;
		Model.Rolle = rolle;
		await Task.CompletedTask;
	}

	private string GetButtonRolle(string rolle)
	{
		return selectedRolle == rolle ? "btn-selected" : "btn-disabled";
	}
}
